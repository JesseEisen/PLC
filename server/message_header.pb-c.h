/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_message_5fheader_2eproto__INCLUDED
#define PROTOBUF_C_message_5fheader_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _MessageHeader MessageHeader;


/* --- enums --- */

typedef enum _MessageHeader__TYPE {
  MESSAGE_HEADER__TYPE__REQUEST = 1,
  MESSAGE_HEADER__TYPE__RESPONES = 2,
  MESSAGE_HEADER__TYPE__TEXT = 3
} MessageHeader__TYPE;

/* --- messages --- */

struct  _MessageHeader
{
  ProtobufCMessage base;
  int32_t message_id;
  protobuf_c_boolean has_session;
  int32_t session;
  protobuf_c_boolean has_message_type;
  MessageHeader__TYPE message_type;
  protobuf_c_boolean has_room_tag;
  int32_t room_tag;
  protobuf_c_boolean has_version;
  int32_t version;
};
#define MESSAGE_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&message_header__descriptor) \
    , 0, 0,0, 0,0, 0,0, 0,0 }


/* MessageHeader methods */
void   message_header__init
                     (MessageHeader         *message);
size_t message_header__get_packed_size
                     (const MessageHeader   *message);
size_t message_header__pack
                     (const MessageHeader   *message,
                      uint8_t             *out);
size_t message_header__pack_to_buffer
                     (const MessageHeader   *message,
                      ProtobufCBuffer     *buffer);
MessageHeader *
       message_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   message_header__free_unpacked
                     (MessageHeader *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MessageHeader_Closure)
                 (const MessageHeader *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor message_header__descriptor;
extern const ProtobufCEnumDescriptor    message_header__type__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_message_5fheader_2eproto__INCLUDED */
